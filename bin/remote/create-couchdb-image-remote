#!/bin/sh

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Create a CouchDB AMI. Runs on the EC2 instance.

# Import variables
bin=`dirname "$0"`
bin=`cd "$bin"; pwd`
. "$bin"/ec2-env-tmp.sh

# Remove environment script since it contains sensitive information
rm -f "$bin"/ec2-env-tmp.sh

# append our welcome message to the AMI message
echo "making motd"
# cat /mnt/motd
cat /mnt/motd >> /etc/motd
cat /mnt/motd >> /etc/motd.tail

echo "new motd"
cat /etc/motd

# updating things
apt-get update -y
apt-get clean -y
apt-get upgrade -y

# install CouchDB (Can we use apt-get?)
echo "getting dependencies with apt-get"
apt-get install -y build-essential erlang libicu-dev libmozjs-dev \
libcurl4-openssl-dev automake autoconf libtool help2man subversion

# install checkinstall (creates a .deb and let's us remove couchdb, for clean updates, etc.)
apt-get install -y checkinstall

# TODO EBS

echo "installing CouchDB $COUCHDB_VERSION from svn $COUCHDB_SVN"
mkdir -p /root/src
cd /root/src
svn co $COUCHDB_SVN couchdb_src
cd couchdb_src
./bootstrap
./configure
make -j2
checkinstall -y -D --install=yes \
    --pkgname=apache-couchdb --pkgversion=$COUCHDB_VERSION \
    --maintainer=root@localhost \
    --pakdir=/root --pkglicense=Apache 

echo "setting up the CouchDB user"
adduser --system --home /usr/local/var/lib/couchdb --no-create-home \
        --shell /bin/false --group --gecos "CouchDB Administrator" couchdb

chown -R couchdb:couchdb /usr/local/etc/couchdb
chown -R couchdb:couchdb /usr/local/var/lib/couchdb
chown -R couchdb:couchdb /usr/local/var/log/couchdb
chown -R couchdb:couchdb /usr/local/var/run/couchdb

chmod -R 0770 /usr/local/etc/couchdb
chmod -R 0770 /usr/local/var/lib/couchdb
chmod -R 0770 /usr/local/var/log/couchdb
chmod -R 0770 /usr/local/var/run/couchdb

echo "using /mnt/couchdb for data and logs"
mkdir -p /mnt/couchdb/data
mkdir -p /mnt/couchdb/logs
chown -R couchdb /mnt/couchdb
chmod -R 0770 /mnt/couchdb
# TODO configure logrotate for this logfile

COUCH_LOCAL_INI=/usr/local/etc/couchdb/local.ini

echo "" >> $COUCH_LOCAL_INI
echo "[couchdb]" >> $COUCH_LOCAL_INI
echo "database_dir = /mnt/couchdb/data" >> $COUCH_LOCAL_INI
echo "view_index_dir = /mnt/couchdb/data" >> $COUCH_LOCAL_INI
echo "" >> $COUCH_LOCAL_INI
echo "[log]" >> $COUCH_LOCAL_INI
echo "file = /mnt/couchdb/logs/couch.log" >> $COUCH_LOCAL_INI

echo "configuring CouchDB to allow remote connections"
# set the couchdb bind address
cat /usr/local/etc/couchdb/local.ini | awk '{gsub(";bind_address = 127.0.0.1", "bind_address = 0.0.0.0"); print}' > /usr/local/etc/couchdb/local.ini.tmp
mv -f /usr/local/etc/couchdb/local.ini.tmp /usr/local/etc/couchdb/local.ini

echo "making couchdb start at boot"
ln -s /usr/local/etc/init.d/couchdb /etc/init.d/couchdb
update-rc.d couchdb defaults

# echo "starting couchdb"
# /etc/init.d/couchdb start
# 
# sleep 5
# 
# curl localhost:5984

# install Java?
# wat?
# install CouchDB-Lucene

# Do configuration on instance startup
echo "/root/couchdb-init" >> /etc/init.d/rc.local 

# Delete SSH authorized_keys since it includes the key it was launched with. (Note that it is re-populated when an instance starts.)
# note: this is now done in a seperate step
# rm -f /root/.ssh/authorized_keys

# Ensure logging in to new hosts is seamless.
echo '    StrictHostKeyChecking no' >> /etc/ssh/ssh_config

# echo "skipping bundle"
# exit 0

# Register image
echo "bundling image"
# Bundle and upload image
cd ~root
# Don't need to delete .bash_history since it isn't written until exit.
df -h
ec2-bundle-vol -d /mnt -k /mnt/pk*.pem -c /mnt/cert*.pem -u $AWS_ACCOUNT_ID -s 3072 -p couchdb-$COUCHDB_VERSION-$ARCH -r $ARCH

ec2-upload-bundle -b $S3_BUCKET -m /mnt/couchdb-$COUCHDB_VERSION-$ARCH.manifest.xml -a $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY

# End
echo "EC2 setup Done"
